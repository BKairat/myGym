import argparse
import os


DESCRIPTION_FILE_PATH = os.path.join('envs', 'examples', 'description.txt')
PREDEFINED_ARGS = [
    '--config configs/train_reach.json',
    '--config configs/train_pnp_4n_multitask4.json',
    '--config configs/train_swipe.json',
]


def get_parser():
    parser = argparse.ArgumentParser(description='Show examples of language descriptions for specified environments. '
                                                 'It\'s assumed that the file is launched from the same directory '
                                                 'as the train.py')
    parser.add_argument('-cmd', '--command', default='',
                        help='If passed, the environment generated by the command is used for language description, '
                             'otherwise the predefined commands are used')
    return parser


def get_description(launch_command, file_path=DESCRIPTION_FILE_PATH):
    os.system(launch_command + ' --gui 0 -ld 1' + ' >/dev/null 2>&1')
    with open(file_path, "r") as file:
        lines = file.readlines()

        if len(lines) != 1:
            msg = f'Invalid file format: {file_path}. Given {len(lines)} lines, but the script was expecting only one'
            raise Exception(msg)

        return lines[0]


def main():
    args = get_parser().parse_args()
    if args.command != '':
        print(get_description(args.command))
    else:
        print('"Launch command (environment task)" -> "Language description" mappings:')
        for cmd in map(lambda a: 'python train.py ' + a, PREDEFINED_ARGS):
            print(cmd + ' -> ' + get_description(cmd))


if __name__ == "__main__":
    main()
